@page "/products/create"

@inject AppDbContext _context
@inject NavigationManager _navegation

<Heading title="New Product" buttonTitle="Go back" buttonAction="@NavigateToList" buttonContext="success" />

<EditForm Model="_model" OnValidSubmit="@HandleSubmitAsync">

    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <InputText class="form-control" type="text" id="Title" @bind-Value="_model.Title"></InputText>
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <InputNumber class="form-control" type="number" id="Price" @bind-Value="_model.Price"></InputNumber>
    </div>

    <div class="mb-3">
        <label for="CategoryId" class="form-label">Category</label>
        <InputSelect id="CategoryId" @bind-Value="_model.CategoryId" class="form-control" >
            @foreach (var category in _categories)
            {
                <option value="@category.Id">@category.Id - @category.Title</option>
            }
      </InputSelect>
    </div>

    @if(!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert"> @_errorMessage </div>
    }

    <button class="btn btn-success" type="submit">Save</button>
</EditForm>

@code {
    Product _model = new ();

    List<Category> _categories = new();

    public string? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        _categories = await _context.Categories.AsNoTracking().ToListAsync();

        if(_categories.Count > 0)
        {
            _model.CategoryId = _categories[0].Id;
        } 
    }

    async Task HandleSubmitAsync()
    {
        try
        {
            await _context.Products.AddAsync(_model);
            await _context.SaveChangesAsync();
            _navegation.NavigateTo("/products");

        } catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }

    public void NavigateToList()
    {
        _navegation.NavigateTo("/products");
    }

  
}
